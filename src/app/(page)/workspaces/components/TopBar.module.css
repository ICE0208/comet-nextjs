.topBar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  max-width: 1200px;
  margin-bottom: 2.5rem;
  padding-top: 0.5rem;
}

.leftSection {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.rightControls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.createButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 500;
  background-color: #f5f5f5;
  color: #333;
  border: 1px solid #e2e8f0;
  cursor: pointer;
  transition: all 0.2s ease;
}

.createButton:hover {
  background-color: #eaeaea;
}

.plusIcon {
  transition: transform 0.2s ease;
}

.createButton:hover .plusIcon {
  transform: rotate(90deg);
}

/* 큐 상태 관련 스타일 - 프로그레스바 형태 */
.queueSection {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.queueSectionLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: #64748b;
  white-space: nowrap;
}

.queueProgressGroup {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
}

.queueProgressContainer {
  display: flex;
  align-items: center;
  gap: 0rem;
}

.queueProgressLabel {
  font-size: 0.75rem;
  font-weight: 500;
  color: #64748b;
  /* min-width: 2rem; */
  text-align: right;
}

.queueProgressBar {
  width: 4rem;
  height: 0.375rem;
  background-color: #f1f5f9;
  border-radius: 0.1875rem;
  overflow: hidden;
  border: 1px solid #e2e8f0;
  margin: 0 0.5rem;
}

.queueProgressFill {
  height: 100%;
  transition:
    width 0.3s ease,
    background-color 0.3s ease;
  border-radius: 0.125rem;
}

.queueProgressSkeleton {
  width: 50%;
  background-color: #cbd5e1 !important;
  animation: pulse 1.5s ease-in-out infinite;
}

.queueProgressText {
  font-size: 0.75rem;
  font-weight: 500;
  color: #64748b;
  min-width: 1.5rem;
  text-align: left;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.refreshButtonContainer {
  position: relative;
  display: flex;
  align-items: center;
}

.queueRefreshButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem;
  border: 1px solid #e2e8f0;
  border-radius: 0.375rem;
  background-color: #ffffff;
  color: #64748b;
  cursor: pointer;
  transition: all 0.2s ease;
}

.queueRefreshButton:hover {
  background-color: #f8fafc;
  border-color: #cbd5e1;
  color: #475569;
}

.queueRefreshButton:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

.refreshSpinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* 간단한 툴팁 스타일 */
.simpleTooltip {
  position: absolute;
  bottom: calc(100% + 0.5rem);
  left: 50%;
  transform: translateX(-50%);
  background-color: #1f2937;
  color: #ffffff;
  padding: 0.375rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  font-weight: 500;
  white-space: nowrap;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  pointer-events: none;
}

.simpleTooltip::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  border: 0.25rem solid transparent;
  border-top-color: #1f2937;
}

.viewToggle {
  display: flex;
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid #e2e8f0;
  background: #fff;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.viewBtn {
  padding: 0.5rem 1.2rem;
  background: none;
  border: none;
  font-size: 1.1rem;
  color: #4a5568;
  cursor: pointer;
  transition: all 0.2s ease;
}

.viewBtn.selected {
  background: #f1f5f9;
  color: #4a5568;
  font-weight: 600;
}

.sortSelect {
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  padding: 0.5rem 1.2rem;
  font-size: 0.9rem;
  background: #fff;
  color: #4a5568;
  outline: none;
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

@media (max-width: 768px) {
  .topBar {
    max-width: 100%;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .leftSection {
    width: 100%;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .queueSection {
    width: 100%;
    justify-content: flex-start;
    flex-wrap: wrap;
  }

  .queueProgressGroup {
    flex-direction: row;
    gap: 0.5rem;
  }

  .rightControls {
    width: 100%;
    justify-content: flex-end;
  }
}
